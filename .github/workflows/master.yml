# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements. See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License. You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Submarine

# Trigger the workflow on push or pull request
on: [push, pull_request]

env:
  VERSION: "0.8.0-SNAPSHOT"
  BUILD_FLAG: "clean install -ntp -DskipTests -am"
  TEST_FLAG: "test -DskipRat -ntp"
jobs:
  generate-k8s-versions-array:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - id: set-matrix
        run: |
          echo "::set-output name=matrix::[\"v1.18.20\"]"
  submarine-k8s:
    needs: generate-k8s-versions-array
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
      matrix:
        k8s-version: ${{fromJson(needs.generate-k8s-versions-array.outputs.matrix)}}
      fail-fast: false
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 50
      - name: Cache jacoco.exec
        uses: actions/cache@v2
        with:
          path: ./submarine-test/test-k8s/target/jacoco.exec
          key: ${{ runner.os }}-docker-${{ github.sha }}
      - name: Set up JDK 1.8
        uses: actions/setup-java@v1
        with:
          java-version: "1.8"
      - name: Set up Maven 3.6.3
        uses: stCarolas/setup-maven@v4
        with:
          maven-version: 3.6.3
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            ${{ runner.os }}-maven-
      - name: Check version
        run: |
          mvn --version
          java -version
          helm version
          kind version
      - name: Create kind cluster
        run: kind create cluster --config ./.github/config/kind-config-kind.yaml --wait 3m --image kindest/node:${{ matrix.k8s-version }}
      - name: Download Istio 1.13.0
        run: |
          curl -L https://istio.io/downloadIstio | ISTIO_VERSION=1.13.0 sh -
          cd istio-1.13.0
          echo "$PWD/bin" >> $GITHUB_PATH
      - name: Install Istio
        run: istioctl install -y --set values.global.proxy.resources.requests.cpu=10m
      - name: Show K8s cluster information
        run: |
          kubectl cluster-info
          kubectl version
          kubectl get pods -n kube-system
          echo "current-context:" $(kubectl config current-context)
          echo "environment-kubeconfig:" ${KUBECONFIG}
      - name: Build with Maven
        run: |
          echo ">>> mvn ${BUILD_FLAG} -B"
          mvn ${BUILD_FLAG} -B
      - name: Build Image locally
        run: .github/scripts/build-image-locally.sh
      - name: Start submarine
        run: bash ./.github/scripts/start-submarine.sh
      - name: Test
        env:
          TEST_FLAG: "verify -DskipRat -ntp"
          TEST_MODULES: "-pl :submarine-test-k8s"
        run: |
          echo ">>> mvn ${TEST_FLAG} ${TEST_MODULES} -B"
          mvn ${TEST_FLAG} ${TEST_MODULES} -B
      - name: Failure status
        run: |
          kubectl describe nodes
          kubectl get pods
          kubectl -n default get events --sort-by='{.lastTimestamp}'
        if: ${{ failure() }}
      - name: Delete temporary build artifacts before caching
        run: |
          #Never cache local artifacts
          rm -rf ~/.m2/repository/org/apache/submarine
        if: always()
